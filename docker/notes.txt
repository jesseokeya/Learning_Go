🐳 Docker Notes 🐳

/* Get Docker Version Details */
docker —version
docker-compose —version

docker-machine —version

/* List All Docker Containers  */
docker ps

/* Test a Docker hello-world image pulled from the docker registry  */
docker run hello-world

/* Start Up A nginx Docker web server  named webserver on http://localhost/  */
docker run -d -p 80:80 --name webserver nginx

** NOTE ‘webserver’ is a name and could be renamed to anything **

/* Start and Stop docker web server */
docker stop webserver
docker start webserver

/* List all Docker Containers including not running ones  but `docker ps` just lists running containers */
docker ps -a

/* Permenently delete a docker container */
docker rm -f webserver

/* List all Docker Images */
docker images

/* Remove all docker Images */
docker rmi

/* Remove a specific docker image */
docker rmi nginx

/* To Get Docker Memory Cpu Usage */
docker stats

/* Force stop a Running Container */
docker kill image_name

    Important ‼️
	↓

/* Building / Creating a Docker Image */
docker build -t cloud-native-go:1.0.0 .

/* Tagging a Docker Image and Preparing it for a Push to Docker Hub*/
docker tag cloud-native-go:1.0.0 jesseokeya/cloud-native-go:1.0.0

/* Pushing a Tagged Docker Image To Docker Hub */
docker push jesseokeya/cloud-native-go:1.0.0

/* Running a Docker image */
docker run -it -p 8080:8080 cloud-native-go:1.0.0

/* Setting An Environment Variable Before Running a Docker image */
docker run -it -e "PORT=3000" -p 8080:3000 cloud-native-go:1.0.0

/* Running a Docker Image By Name */
docker run --name cloud-native-go -d -p 8080:8080 cloud-native-go:1.0.0

/* Stop Running a Docker Image */
docker stop cloud-native-go

/* Specifying Allowed Memeory And Cpu Quota Limit For a Docker Image*/
docker run --name cloud-native-go --cpu-quota 50000 --memory 64m --memory-swappiness 0 -d -p 8080:8080 cloud-native-go:1.0.1

----------------
    Extras 
----------------
 Docker Notes
- docker ps -a 
- docker images 
- docker rm -f $(docker ps -a -q)
- docker rmi -f $(docker images -a -q)’
- docker pull <container_name>
- docker create <container_name> // Gives you the container id
- docker start -a <container_id>
- docker start -a <container_id> <optional_command>
- docker stop <container_id>
- docker kill <container_id>
- docker run <container_name> <optional_command>
- docker run -p <port>:<port> <image_id>
- docker system prune
- docker logs <container_id>
- docker exec -it <container_id> <command or “sh”> // prfereable
- docker run -it <container_id> <command or “sh”>
- docker build .
- docker build -t  <tag_name> <container_name> .
- docker commit -c ‘CMD [“redis-server”]’ <container_id>
- docker-compose up
- docker-compose down
- docker-compose up -d
- docker-compose up —build

Restart Policies:


Kubernetes Notes
